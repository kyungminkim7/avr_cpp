#pragma once

#include <stdint.h>

#include <avr_cpp/chrono.h>
#include <avr_cpp/interrupt.h>
#include <avr_cpp/ratio.h>
#include <avr_cpp/timer_common.h>

namespace avr_cpp {

template<unsigned int PRESCALER>
class HighResolutionTimer${n} {
    static_assert(PRESCALER == 1 ||
                  PRESCALER == 8 ||
                  PRESCALER == 64 ||
                  PRESCALER == 256 ||
                  PRESCALER == 1024,
                  "Clock prescaler must be either 1, 8, 64, 256, or 1024");
public:
    using duration = Chrono::Duration<uint16_t, 
                                      Ratio<PRESCALER, Chrono::SystemClock::frequency>>;
    static constexpr auto prescaler = PRESCALER;

    HighResolutionTimer${n}();
    HighResolutionTimer${n}(const duration &period, Timer::PinMode pinMode, Timer::Mode mode);
    HighResolutionTimer${n}(const duration &period, 
                            InterruptServiceRoutine interruptServiceRoutine, 
                            Timer::Mode mode);

    ~HighResolutionTimer${n}();

    void start();
    void reset();
    void stop();

    duration elapsedTime() const;

    static void setClockPrescaler();

private:
    static void setNormalWaveformGenerationMode();
    static void setClearTimerOnCompareMatchWaveformGenerationMode();
    static void disableTimerInterrupts();
    static void setPeriod(const duration &period, Timer::Mode mode);
    static void setPinMode(Timer::PinMode pinMode, Timer::Mode mode);
    static void disconnectOutputComparePins();
    static void enableOutputCompareInterrupt(Timer::Mode mode);
    static void setOutputCompareInterruptServiceRoutine(InterruptServiceRoutine interruptServiceRoutine, 
                                                        Timer::Mode mode);
};

using HighResolutionTimer${n}_1 = HighResolutionTimer${n}<1>;
using HighResolutionTimer${n}_8 = HighResolutionTimer${n}<8>;
using HighResolutionTimer${n}_64 = HighResolutionTimer${n}<64>;
using HighResolutionTimer${n}_256 = HighResolutionTimer${n}<256>;
using HighResolutionTimer${n}_1024 = HighResolutionTimer${n}<1024>;

} // namespace avr_cpp
